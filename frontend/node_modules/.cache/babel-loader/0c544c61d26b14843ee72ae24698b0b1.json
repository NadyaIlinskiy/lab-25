{"ast":null,"code":"import _objectSpread from \"/Users/sccanilinskaya/codefellows/401/lab-25/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/sccanilinskaya/codefellows/401/lab-25/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sccanilinskaya/codefellows/401/lab-25/frontend/src/contexts/AuthContext.js\";\nimport React, { useState } from 'react';\nimport fetch from 'node-fetch';\nexport const AuthContext = React.createContext();\n\nfunction AuthProvider(props) {\n  const _useState = useState({\n    username: '',\n    password: '',\n    email: '',\n    token: '',\n    role: '',\n    update: (key, val) => {\n      setState(state => {\n        let newState = _objectSpread({}, state);\n\n        newState[key] = val;\n        return newState;\n      });\n    },\n    signin: async (username, password) => {\n      const basicAuth = 'Basic ' + Buffer.from(username + ':' + password).toString('base64'); //http request\n\n      const api = 'http://localhost:3000/signin';\n      let response = await fetch(api, {\n        method: 'POST',\n        headers: {\n          Authorization: basicAuth\n        }\n      });\n      let body = await response.json();\n      console.log(body);\n      setState(state => _objectSpread({}, state, {\n        token: body.token,\n        role: body.role,\n        password: ''\n      }));\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  return React.createElement(AuthContext.Provider, {\n    value: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.children);\n}\n\nexport default AuthProvider;","map":{"version":3,"sources":["/Users/sccanilinskaya/codefellows/401/lab-25/frontend/src/contexts/AuthContext.js"],"names":["React","useState","fetch","AuthContext","createContext","AuthProvider","props","username","password","email","token","role","update","key","val","setState","state","newState","signin","basicAuth","Buffer","from","toString","api","response","method","headers","Authorization","body","json","console","log","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,OAAO,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;;AAEP,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA,oBACFL,QAAQ,CAAE;AAChCM,IAAAA,QAAQ,EAAE,EADsB;AAEhCC,IAAAA,QAAQ,EAAE,EAFsB;AAGhCC,IAAAA,KAAK,EAAC,EAH0B;AAIhCC,IAAAA,KAAK,EAAC,EAJ0B;AAKhCC,IAAAA,IAAI,EAAC,EAL2B;AAMhCC,IAAAA,MAAM,EAAC,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjBC,MAAAA,QAAQ,CAACC,KAAK,IAAI;AACd,YAAIC,QAAQ,qBAAOD,KAAP,CAAZ;;AACAC,QAAAA,QAAQ,CAACJ,GAAD,CAAR,GAAeC,GAAf;AACA,eAAOG,QAAP;AACH,OAJO,CAAR;AAKH,KAZ+B;AAahCC,IAAAA,MAAM,EAAE,OAAOX,QAAP,EAAiBC,QAAjB,KAA8B;AAElC,YAAMW,SAAS,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYd,QAAQ,GAAG,GAAX,GAAiBC,QAA7B,EAAuCc,QAAvC,CAAgD,QAAhD,CAA7B,CAFkC,CAIlC;;AACA,YAAMC,GAAG,GAAG,8BAAZ;AAEA,UAAIC,QAAQ,GAAG,MAAMtB,KAAK,CAAEqB,GAAF,EAAO;AAC7BE,QAAAA,MAAM,EAAE,MADqB;AAE7BC,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAER;AADV;AAFoB,OAAP,CAA1B;AAOA,UAAIS,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAb,MAAAA,QAAQ,CAACC,KAAK,sBACPA,KADO;AAEVN,QAAAA,KAAK,EAAEkB,IAAI,CAAClB,KAFF;AAGVC,QAAAA,IAAI,EAAEiB,IAAI,CAACjB,IAHD;AAIVH,QAAAA,QAAQ,EAAE;AAJA,QAAN,CAAR;AAMH;AApC+B,GAAF,CADN;AAAA;AAAA,QACrBQ,KADqB;AAAA,QACdD,QADc;;AA0C3B,SAAO,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFV,KAAK,CAAC0B,QADJ,CAAP;AAGA;;AAED,eAAe3B,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport fetch from 'node-fetch';\n\nexport const AuthContext = React.createContext();\n\nfunction AuthProvider(props){\nconst [state, setState] = useState( {\n    username: '',\n    password: '',\n    email:'',\n    token:'',\n    role:'',\n    update:(key, val) => {\n        setState(state => {\n            let newState = {...state};\n            newState[key]= val;\n            return newState;\n        })\n    },\n    signin: async (username, password) => {\n\n        const basicAuth = 'Basic ' + Buffer.from(username + ':' + password).toString('base64');\n\n        //http request\n        const api = 'http://localhost:3000/signin';\n\n        let response = await fetch (api, {\n            method: 'POST',\n            headers: {\n                Authorization: basicAuth,\n            },\n        });\n\n        let body = await response.json();\n        console.log(body);\n\n        setState(state => ({\n            ...state,\n            token: body.token,\n            role: body.role,\n            password: '',\n        }));\n    }\n});\n \n   \n\n return <AuthContext.Provider value={state}>\n     {props.children}\n     </AuthContext.Provider>\n}\n\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}